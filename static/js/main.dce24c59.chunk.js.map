{"version":3,"sources":["assets/Card.js","assets/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","marginTop","minWidth","OutlinedCard","props","classes","Card","className","variant","CardContent","Typography","component","text","CardActions","Button","size","defaultProps","HomePage","useState","CardValue","setCardValue","AmazonLink","SetAmazonLink","formData","FormData","SubmitButtonState","SetSubmitButtonState","changeCard","res","console","log","TextField","id","label","onChange","e","target","value","disabled","onClick","append","fetch","method","body","then","response","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAQMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,UAAW,GACXC,SAAU,OAIlB,SAASC,EAAaC,GAClB,IAAMC,EAAUP,IAEhB,OACI,eAACQ,EAAA,EAAD,CAAMC,UAAWF,EAAQL,KAAMQ,QAAQ,WAAvC,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYF,QAAQ,KAAKG,UAAU,KAAnC,SACKP,EAAMQ,SAGf,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAb,6BAMhBZ,EAAaa,aAAe,GAGbb,QCuBAc,MApDf,WAAqB,IAAD,EAEgBC,mBAAS,0BAFzB,mBAEXC,EAFW,KAEAC,EAFA,OAIkBF,mBAAS,IAJ3B,mBAIXG,EAJW,KAICC,EAJD,KAKZC,EAAW,IAAIC,SALH,EAOgCN,oBAAS,GAPzC,mBAOXO,EAPW,KAOQC,EAPR,KAsBZC,EAAa,SAACC,GACdC,QAAQC,IAAI,yCACZD,QAAQC,IAAIF,GAEU,MAAlBA,EAAG,OACHR,EAAa,0CACY,MAAlBQ,EAAG,OACVR,EAAa,oEACY,MAAlBQ,EAAG,OACVR,EAAa,kDACY,MAAlBQ,EAAG,OACVR,EAAa,8EACY,MAAlBQ,EAAG,QACVR,EAAa,yEAKrB,OACI,sBAAKb,UAAU,SAAf,UACI,wDAGA,cAACwB,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,sBAAsBzB,QAAQ,WAAW0B,SAAU,SAACC,GAAQb,EAAca,EAAEC,OAAOC,UACxH,cAACvB,EAAA,EAAD,CAAQP,UAAU,aAAayB,GAAG,eAAeM,SAAUb,EAAmBc,QArCrE,WAEbb,GAAqB,GAErBH,EAASiB,OAAO,wBAAyBnB,GACzCQ,QAAQC,IAAIT,GACZoB,MAAM,sDAAuD,CACzDC,OAAQ,OACRC,KAAMpB,IACPqB,MAAK,SAACC,GAAelB,EAAWkB,GAAWnB,GAAqB,OA4BoClB,QAAQ,YAA3G,oBACA,cAAC,EAAD,CAAMI,KAAMO,QC1CT2B,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dce24c59.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 25,\r\n        minWidth: 275,\r\n    }\r\n});\r\n\r\nfunction OutlinedCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {props.text}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nOutlinedCard.defaultProps = {\r\n\r\n}\r\nexport default OutlinedCard;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from './Card.js';\r\n\r\nfunction HomePage() {\r\n\r\n    let [CardValue, setCardValue] = useState(\"Please Submit the link\");\r\n    // let [SavedResponse, SetSavedResponse] = useState(\"\");\r\n    let [AmazonLink, SetAmazonLink] = useState(\"\");\r\n    let formData = new FormData();\r\n\r\n    let [SubmitButtonState, SetSubmitButtonState] = useState(false)\r\n\r\n    let UploadLink = () => {\r\n        // Disabling the button till we get a response\r\n        SetSubmitButtonState(true);\r\n        // document.getElementById('SubmitButton').disabled = true;\r\n        formData.append(\"product_original_link\", AmazonLink);\r\n        console.log(AmazonLink);\r\n        fetch('https://dockertestjap.herokuapp.com/api/add-product', {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then((response) => { changeCard(response); SetSubmitButtonState(false);});\r\n\r\n    }\r\n\r\n    let changeCard = (res) => {\r\n        console.log('this change card function is running.')\r\n        console.log(res);\r\n        // now update the card\r\n        if (res['status'] === 201) {\r\n            setCardValue('Your product was successfully recorded')\r\n        } else if (res['status'] === 208) {\r\n            setCardValue('We already knew about this product. Learn more about the product')\r\n        } else if (res['status'] === 400) {\r\n            setCardValue('There was an issue with the link you submitted')\r\n        } else if (res['status'] === 406) {\r\n            setCardValue('The link you submitted is not an amazon link. Please check the link again.')\r\n        } else if (res['status'] === 500) {\r\n            setCardValue('There was an error in the server. Please report it to the developer.')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Header'>\r\n            <h1>\r\n                Enter Amazon Link Here\r\n            </h1>\r\n            <TextField id=\"outlined-basic\" label=\"Amazon Product Link\" variant=\"outlined\" onChange={(e) => { SetAmazonLink(e.target.value) }} />\r\n            <Button className='BlueButton' id='SubmitButton' disabled={SubmitButtonState} onClick={UploadLink} variant=\"contained\" >Submit</Button>\r\n            <Card text={CardValue} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import './App.css';\nimport HomePage from './assets/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}